type AuthPayload {
  token: String
  user: User
}

input LoginInput {
  email: String!
  password: String!
}

type Mutation {
  createUser(input: UserInput): User
  deleteUser(id: ID!): User
  updateUser(input: UserInput): User
  login(input: LoginInput): AuthPayload
}

type Query {
  getUser(id: ID!): User
  getUsers(q: Search): [User]
}

input Search {
  limit: Int
  offset: Int
  text: String
}

type User {
  id: ID
  name: String!
  email: String!
  password: String!
}

input UserInput {
  id: ID
  name: String!
  email: String!
  password: String!
}
